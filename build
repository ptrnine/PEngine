#!/bin/bash

GPLUSPLUS="g++-11"
CLANGPLUSPLUS="clang++-11"

C_COMPILER=gcc-11
CXX_COMPILER="$GPLUSPLUS"
BUILD_TYPE=release
ENABLE_ASAN=OFF
ENABLE_UBSAN=OFF
ENABLE_TSAN=OFF
ENABLE_NATIVE_ARCH=OFF
EXEC_PATH=""
EXEC_ARGS=""
GDB_EXEC=false
GEN_DB=false
NPROCS=$(($(grep -c ^processor /proc/cpuinfo) - 0))

if [ "$1" = "--help" ]; then
    printf "Usage:
$0 [<options> ...]
--clang         - enable clang build instead gcc
--debug         - enable debug info with no optimizations
--asan          - enable address sanitizer
--ubsan         - enable undefined behavior sanitizer
--tsan          - enable thread sanitizer
--native        - build for current architecture
--exec NAME     - execute specified program after build
--target NAME   - build specified cmake target
--gdb           - execute program under gdb after build
--jobs N        - set jobs count
--gendb         - no building, generate compile_commands.json and put into ./
--help          - show this help
"
exit 0
fi

while [[ $1 == --* ]]; do
    case "$1" in
        "--clang")
            shift
            C_COMPILER=clang-11
            CXX_COMPILER="$CLANGPLUSPLUS"
        ;;
        "--debug")
            shift
            BUILD_TYPE=debug
        ;;
        "--asan")
            shift
            ENABLE_ASAN=ON
        ;;
        "--ubsan")
            shift
            ENABLE_UBSAN=ON
        ;;
        "--tsan")
            shift
            ENABLE_TSAN=ON
        ;;
        "--native")
            shift
            ENABLE_NATIVE_ARCH=ON
        ;;
        "--target")
            shift
            TARGET="$1"; shift
        ;;
        "--exec")
            shift
            EXEC_PATH="$1"; shift
            if [ "$1" == '--' ]; then
                shift
                while [ -n "$1" ]; do
                    EXEC_ARGS="$EXEC_ARGS $1"
                    shift
                done
            fi
        ;;
        "--gdb")
            shift
            GDB_EXEC=true
        ;;
        "--jobs")
            shift
            NPROCS="$1"; shift
        ;;
        "--gendb")
            shift
            GEN_DB=true
        ;;
        *)
            echo "Invalid option $1"
            exit 1
        ;;
    esac
done


if [ -d "./submodules/boost" ] && [ -z "$(ls -A "./submodules/boost")" ]; then
    git submodule init submodules/boost
    git submodule update submodules/boost
    pushd "./submodules/boost"
    git submodule init tools/build
    git submodule update tools/build
cat >> ./tools/build/src/user-config.jam << EOF
using gcc : : $GPLUSPLUS : <compileflags> ;
using clang-linux : : $CLANGPLUSPLUS : <compileflags> ;
EOF
    popd

    pushd "./submodules/boost"
    ./bootstrap.sh --with-toolset=gcc --with-icu
    popd
fi


if [ "$GEN_DB" == "true" ]; then
    cmake . -Bbuild-"$BUILD_TYPE"-clang-11 \
        -DCMAKE_C_COMPILER=/usr/bin/clang-11 \
        -DCMAKE_CXX_COMPILER=/usr/bin/clang++-11 \
        -DCMAKE_BUILD_TYPE=release \
        -DENABLE_ASAN="$ENABLE_ASAN" \
        -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \
        -DMAKE_NPROCS="$NPROCS"
    cp -f build-"$BUILD_TYPE"-clang-11/compile_commands.json .
    exit 0
fi


cmake . -Bbuild-"$BUILD_TYPE"-"$C_COMPILER" \
    -DCMAKE_C_COMPILER="$C_COMPILER" \
    -DCMAKE_CXX_COMPILER="$CXX_COMPILER" \
    -DCMAKE_BUILD_TYPE="$BUILD_TYPE" \
    -DENABLE_ASAN="$ENABLE_ASAN" \
    -DENABLE_UBSAN="$ENABLE_UBSAN" \
    -DENABLE_TSAN="$ENABLE_TSAN" \
    -DENABLE_NATIVE_ARCH="$ENABLE_NATIVE_ARCH" \
    -DMAKE_NPROCS="$NPROCS"

if [ $? -eq 0 ]; then
    if [ -z "$TARGET" ]; then
        make -j "$NPROCS" -C build-"$BUILD_TYPE"-"$C_COMPILER"
    else
        make "$TARGET" -j "$NPROCS" -C build-"$BUILD_TYPE"-"$C_COMPILER"
    fi
fi

if [ $? -eq 0 ] && [ ! -z "$EXEC_PATH" ]; then
    exec_path=$(grep "${EXEC_PATH}.dir" "build-$BUILD_TYPE-$C_COMPILER/Makefile")
    if [ -n "$exec_path" ]; then
        exec_path="${exec_path%%CMakeFiles/$EXEC_PATH*}"
        EXEC_PATH="${exec_path##*-f }$EXEC_PATH"
    fi

    if [ "$GDB_EXEC" == "true" ]; then
        LD_LIBRARY_PATH="./build-$BUILD_TYPE-$C_COMPILER/3rd/lib" gdb --args build-"$BUILD_TYPE"-"$C_COMPILER"/"$EXEC_PATH" $EXEC_ARGS
    else
        LD_LIBRARY_PATH="./build-$BUILD_TYPE-$C_COMPILER/3rd/lib" build-"$BUILD_TYPE"-"$C_COMPILER"/"$EXEC_PATH" $EXEC_ARGS
    fi
fi

